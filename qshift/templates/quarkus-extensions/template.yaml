apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-wizzard
  title: Create a Quarkus Application
  description: Create a Quarkus App using code.quarkus.io code generator
  tags:
    - quarkus
    - java
    - maven
spec:
  owner: guests
  type: service

  parameters:
    - title: Provide information for the Quarkus Application
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the application
          default: my-quarkus-app
          ui:field: EntityNamePicker
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        port:
          title: Port
          type: number
          default: 8080
          description: Override the port exposed for the application

    - title: Provide information about the Java metadata
      required:
        - java_package_name
      properties:
        groupId:
          title: Group ID
          type: string
          default: io.quarkus
          description: Maven Group ID eg (io.janus)
        artifactId:
          title: Artifact ID
          type: string
          default: quarkus-app
          description: Maven Artifact ID
        version:
          title: Version
          type: string
          default: 1.0.0-SNAPSHOT
          description: Maven Artifact Version
        java_package_name:
          title: Java Package Namespace
          type: string
          default: io.quarkus.demo
          description: Name for the Java Package (e.g. io.quarkus.demo)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A cool quarkus app
        javaVersion:
          title: Java Version
          type: string
          description: Java version
          default: '11'
          enum:
            - '11'
            - '17'
          enumNames:
            - Java 11
            - Java 17
        buildTool:
          title: Build Tool
          type: string
          description: The Build tool to use
          default: MAVEN
          enum:
            - MAVEN
            - GRADLE
            - GRADLE_KOTLIN_DSL
          enumNames:
            - Maven
            - Gradle
            - Gradle Kotlin DSL

    - title: Application SCM repository information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              default: github.com
            org:
              title: Repo Org Owner
              type: string
              description: Your SCM organization/group
              default: ch007m
              enum:
                - ch007m
                - iocanel

    - title: Customize the Quarkus application features
      required:
        - healthEndpoint
        - metricsEndpoint
        - infoEndpoint
      properties:
        database:
          title: Enable database
          type: string
          default: none
          enum:
            - none
            - quarkus-jdbc-db2
            - quarkus-jdbc-mariadb
            - quarkus-jdbc-mssql
            - quarkus-jdbc-mysql
            - quarkus-jdbc-oracle
            - quarkus-jdbc-postgresql
          enumNames:
            - 'None'
            - 'DB2'
            - 'Maria DB'
            - 'MS SQL'
            - 'MySQL'
            - 'Oracle'
            - 'PostgreSQL'
        healthEndpoint:
          title: Enable health endpoints
          type: boolean
          default: true
          ui:widget: radio

        metricsEndpoint:
          title: Enable metrics endpoint
          type: boolean
          default: true
          ui:widget: radio

        infoEndpoint:
          title: Enable info endpoint
          type: boolean
          default: true
          ui:widget: radio

        extensions:
          title: Alternative Extensions
          type: array
          description: The list of alternative extensions
          ui:field: QuarkusExtensionList

        additionalProperties:
          title: Additional Properties
          type: string
          description: Additional Properties (to be appended to src/main/application.properties)
          ui:widget: textarea
          ui:options:
            rows: 5

    - title: Provide information about the CI method
      required:
        - ci
      properties:
        ci:
          title: Select a CI method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: ../../skeletons/tekton/
          enum:
            - ../../skeletons/github-actions/
            - ../../skeletons/tekton/
          enumNames:
            - GitHub Action
            - Tekton
      dependencies:
        ci:
          oneOf:
            - properties:
                # Show no extra properties when GitHub Actions is selected
                ci:
                  const: ../../skeletons/github-actions/
            - required:
                - imageRepository
                - namespace
                - imageUrl
              properties:
                ci:
                  const: ../../skeletons/tekton/
                imageRepository:
                  title: Select a registry
                  type: string
                  default: quay.io
                  enum:
                    - quay.io
                    - image-registry.openshift-image-registry.svc:5000
                  enumNames:
                    - Quay
                    - Internal OpenShift Registry
                imageUrl:
                  title: Image URL
                  type: string
                  description: The Quay.io or OpenShift Image URL <REGISTRY>/<IMAGE_URL>/<REPO_NAME>
                namespace:
                  title: Namespace
                  type: string
                  description: The openshift/kubernetes namespace for deploying resources
                  default: qshift

  steps:
    - id: template
      name: Generating the Source Code Component
      action: quarkus:app:create
      input:
        values:
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          version: ${{ parameters.version }}
          buildTool: ${{ parameters.buildTool }}
          javaVersion: ${{ parameters.javaVersion }}
          extensions: ${{ parameters.extensions }}
          database: ${{ parameters.database }}
          infoEndpoint: ${{ parameters.infoEndpoint }}
          healthEndpoint: ${{ parameters.healthEndpoint }}
          metricsEndpoint: ${{ parameters.metricsEndpoint }}
          additionalProperties: ${{ parameters.additionalProperties }}

    - id: ciTemplate
      name: Generating the CI Component
      action: fetch:template
      input:
        url: ${{ parameters.ci }}
        copyWithoutTemplating:
          - .github/workflows/
        values:
          orgName: ${{ parameters.repo.org }}
          repoName: ${{ parameters.repo.name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          namespace: ${{ parameters.namespace }}
          imageUrl: ${{ parameters.imageUrl }}
          imageBuilder: s2i-java
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          javaPackageName: ${{ parameters.javaPackageName}}
          sourceControl: github.com

    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../skeletons/catalog-info/
        values:
          component_id: ${{ parameters.component_id }}
          orgName: ${{ parameters.repo.org }}
          repoName: ${{ parameters.repo.name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          destination: ${{ parameters.repo.org }}/${{ parameters.component_id }}
          host: ${{ parameters.repo.host }}
          namespace: ${{ parameters.namespace }}
          imageUrl: ${{ parameters.imageUrl }}
          imageBuilder: s2i-java
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          ci: ${{ parameters.ci }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          javaPackageName: ${{ parameters.javaPackageName}}
          sourceControl: github.com

    - id: gitopsTemplate
      name: Generating GitOps Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.org }}/${{parameters.component_id}}.git
          namespace: ${{ parameters.namespace }}

    - id: publish
      name: Publishing to Code Source Repository - Github
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.component_id }}
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.org }}&repo=${{parameters.component_id}}"
        defaultBranch: main
        repoVisibility: public

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: argocdQShift # Match appconfig => argocd/appLocatorMethods/instances/name
        namespace: ${{ parameters.namespace }}
        gitops_namespace: openshift-gitops
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.org }}/${{parameters.component_id}}.git
        # labelValue: ${{ parameters.name }}
        path: 'argocd/'

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}